Project.EstablishDomain("Impro-Visor", /(vs17|gcc|clang)/);

let libs = [
    {
        name: "libImproVisor",
        dir: "src_cpp",
        src: {
            cpp: [
                "*.cpp",
                "data/*.cpp", 
                "data/advice/*.cpp", 
                "polya/*.cpp", 
                "util/*.cpp", 
            ],
        },
        inc: ["."]
    }
];

let tests = Project.Glob("src_cpp/test/*.cpp").map((v) =>
{
    let pp = jsmk.path.parse(v);
    return {
        name: pp.name,
        dir: "src_cpp/test",
        src:
        {
            appcpp: [pp.base]
        },
        inc: [".."],
        modules: "libImproVisor"
    }
});
Project.BuildInlineCppProjects("libs", libs);
Project.BuildInlineCppProjects("tests", tests, "before");
